"bancroft":http://en.wikipedia.org/wiki/Global_Positioning_System#Bancroft.27s_method is a "node":http://nodejs.org client for the "gps daemon":http://gpsd.berlios.de providing configurable async location tracking featuring "geojson":http://geojson.org/ geometries _Point_ format.

h2. How it works

Upon object creation ( _new Bancroft()_ ), bancroft connects to a running GPS daemon and send _?WATCH_ and _?POLL_ messages to receive messages (json type) back from the daemon, hence, from the GPS device itself. Upon connection, a _connection_ event is emitted along with daemon version and release details object. A _disconnect_ event is emitted once the daemon is found off grid.

At any time, bancroft keeps track of the current location along with information about current satellite status. A _location_ event is emitted once a new location has been tracked, that is, whenever the latitude, longitude or altitude received from the device differs from the currently stored information. A _satellite_ event is emitted whenever a given satellite (PRN) changes status.

h3. Location Structure

<pre>
{ 
  timestamp: 1311296682000,
  latitude: 45.456445,
  longitude: -73.569651667,
  altitude: 28.9,
  speed: 11,
  geometries: { 
    type: 'Point',
    coordinates: [ -73.569651667, 45.456445, 28.9 ] 
  } 
}

</pre>

h2. Examples

<pre>
var Bancroft = require('bancroft');

var bancroft = new Bancroft();
bancroft.on('connect', function () {
  console.log('connected');
});
bancroft.on('location', function (location) {
  console.log('got new location');
});
bancroft.on('satellite', function (satellite) {
  console.log('got new satellite state');
});
bancroft.on('disconnect', function (err) {
  console.log('disconnected');
});

</pre>

h2. Features

* Real-time location events.
* Real-time satellite state events.
* Location data includes "geojson":http://geojson.org/ geometries _Point_ format.
* Automatic gpsd spawning with device hot-swapping

h2. ChangeLog

h3. 0.0.7

* Port event emitting to v0.6 (eelcocramer)

h2. Installation

h3. Requirements

This module assumes you have a working "gps daemon":http://gpsd.berlios.de accessible somewhere reacheable on the network along with a GPS tracking device up and running. This module has been tested with an old dusty Garmin eTrex Legend with a Serial->USB adapter cable using the NMEA data protocol.

h4. Testing gpsd

@$ sudo gpsd -D 2 -n -b -N -P /tmp/gpsd.pid /dev/ttyUSB0@
@$ gpspipe -w@

h3. Git Clone

@$ git clone git://github.com/pdeschen/bancroft.git@

h3. Install from npm

@$ sudo npm install bancroft [-g]@

h2. Todos

* Accumulate waypoints/route into kml?
* Add options for non-moving position differential?
