{
  "author": {
    "name": "Pascal Deschenes",
    "email": "pdeschen@rassemblr.com",
    "url": "http://blog.rassemblr.com"
  },
  "name": "bancroft",
  "description": "gpsd client for GPS tracking device.",
  "version": "0.0.8",
  "keywords": [
    "gps",
    "gpsd",
    "location",
    "tracking",
    "position"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/pdeschen/bancroft.git"
  },
  "bugs": {
    "email": "pdeschen+bancroft@gmail.com",
    "url": "http://github.com/pdeschen/bancroft/issues"
  },
  "main": "bancroft",
  "engines": {
    "node": ">=v0.4.0 <=v0.6.x"
  },
  "dependencies": {
    "winston": ">=v0.3.3"
  },
  "devDependencies": {},
  "contributors": [
    {
      "name": "Pascal Deschenes",
      "email": "pdeschen@rassemblr.com",
      "url": "http://blog.rassemblr.com"
    },
    {
      "name": "eelcocramer",
      "email": "eelco.cramer@gmail.com"
    }
  ],
  "readme": "\"bancroft\":http://en.wikipedia.org/wiki/Global_Positioning_System#Bancroft.27s_method is a \"node\":http://nodejs.org client for the \"gps daemon\":http://gpsd.berlios.de providing configurable async location tracking featuring \"geojson\":http://geojson.org/ geometries _Point_ format.\n\nh2. How it works\n\nUpon object creation ( _new Bancroft()_ ), bancroft connects to a running GPS daemon and send _?WATCH_ and _?POLL_ messages to receive messages (json type) back from the daemon, hence, from the GPS device itself. Upon connection, a _connection_ event is emitted along with daemon version and release details object. A _disconnect_ event is emitted once the daemon is found off grid.\n\nAt any time, bancroft keeps track of the current location along with information about current satellite status. A _location_ event is emitted once a new location has been tracked, that is, whenever the latitude, longitude or altitude received from the device differs from the currently stored information. A _satellite_ event is emitted whenever a given satellite (PRN) changes status.\n\nh3. Location Structure\n\n<pre>\n{ \n  timestamp: 1311296682000,\n  latitude: 45.456445,\n  longitude: -73.569651667,\n  altitude: 28.9,\n  speed: 11,\n  geometries: { \n    type: 'Point',\n    coordinates: [ -73.569651667, 45.456445, 28.9 ] \n  } \n}\n\n</pre>\n\nh2. Examples\n\n<pre>\nvar Bancroft = require('bancroft');\n\nvar bancroft = new Bancroft();\nbancroft.on('connect', function () {\n  console.log('connected');\n});\nbancroft.on('location', function (location) {\n  console.log('got new location');\n});\nbancroft.on('satellite', function (satellite) {\n  console.log('got new satellite state');\n});\nbancroft.on('disconnect', function (err) {\n  console.log('disconnected');\n});\n\n</pre>\n\nh2. Features\n\n* Real-time location events.\n* Real-time satellite state events.\n* Location data includes \"geojson\":http://geojson.org/ geometries _Point_ format.\n* Automatic gpsd spawning with device hot-swapping\n\nh2. ChangeLog\n\nh3. 0.0.7\n\n* Port event emitting to v0.6 (eelcocramer)\n\nh2. Installation\n\nh3. Requirements\n\nThis module assumes you have a working \"gps daemon\":http://gpsd.berlios.de accessible somewhere reacheable on the network along with a GPS tracking device up and running. This module has been tested with an old dusty Garmin eTrex Legend with a Serial->USB adapter cable using the NMEA data protocol.\n\nh4. Testing gpsd\n\n@$ sudo gpsd -D 2 -n -b -N -P /tmp/gpsd.pid /dev/ttyUSB0@\n@$ gpspipe -w@\n\nh3. Git Clone\n\n@$ git clone git://github.com/pdeschen/bancroft.git@\n\nh3. Install from npm\n\n@$ sudo npm install bancroft [-g]@\n\nh2. Todos\n\n* Accumulate waypoints/route into kml?\n* Add options for non-moving position differential?\n",
  "_id": "bancroft@0.0.8",
  "dist": {
    "shasum": "21beba6a6402da04e125062ea65c683209665176"
  },
  "_from": "bancroft@0.0.8"
}
